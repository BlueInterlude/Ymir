name: Release

on:
  push:
    tags: [ "v*" ]

jobs:
  build-windows:
    name: windows-${{ matrix.c_compiler }}-${{ matrix.x86_simd_ext.name }}
    runs-on: windows-latest

    strategy:
      fail-fast: false

      matrix:
        build_type: [Release]
        # Notes about compilers:
        # - MSVC (cl) produces much slower code and takes a long time to complete the LTO step
        c_compiler: [clang]  # [clang, cl]
        x86_simd_ext:
          - name: "SSE2"
            value: "OFF"
          - name: "AVX2"
            value: "ON"
        include:
          - c_compiler: clang
            cpp_compiler: clang

    steps:
    - uses: actions/checkout@v4
      with:
        submodules: recursive

    - name: Set reusable strings
      id: strings
      shell: bash
      run: |
        echo "build-output-dir=${{ github.workspace }}/build" >> "$GITHUB_OUTPUT"

    - name: Configure MSVC
      if: ${{ matrix.c_compiler == 'cl' }}
      uses: TheMrMilchmann/setup-msvc-dev@v3
      with:
        arch: x64

    - name: Configure CMake
      run: >
        cmake -B ${{ steps.strings.outputs.build-output-dir }}
        -DCMAKE_CXX_COMPILER=${{ matrix.cpp_compiler }}
        -DCMAKE_C_COMPILER=${{ matrix.c_compiler }}
        -DCMAKE_BUILD_TYPE=${{ matrix.build_type }}
        -DBUILD_SHARED_LIBS=OFF
        -Dsatemu_AVX2=${{ matrix.x86_simd_ext.value }}
        -Dsatemu_ENABLE_IPO=ON
        -Dsatemu_ENABLE_DEVLOG=OFF
        -Dsatemu_ENABLE_IMGUI_DEMO=OFF
        -Dsatemu_ENABLE_SANDBOX=OFF
        -S ${{ github.workspace }}
        -G Ninja

    - name: Build
      run: cmake --build ${{ steps.strings.outputs.build-output-dir }} --config ${{ matrix.build_type }} --parallel

    ## FIXME: Catch2 integration still isn't working
    #- name: Test
    #  working-directory: ${{ steps.strings.outputs.build-output-dir }}
    #  run: ctest --build-config ${{ matrix.build_type }}

    - name: Package artifacts
      run: |
        powershell Compress-Archive -Path "build/apps/satemu-sdl3/satemu-sdl3.exe" -DestinationPath "satemu-windows-${{ matrix.x86_simd_ext.name }}.zip"

    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: satemu-windows-${{ matrix.x86_simd_ext.name }}
        path: satemu-windows-${{ matrix.x86_simd_ext.name }}.zip

  build-linux:
    name: linux-${{ matrix.c_compiler }}-${{ matrix.x86_simd_ext.name }}
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false

      matrix:
        build_type: [Release]
        # Notes about compilers:
        # - GCC (gcc) gets stuck building sh2.cpp (didn't finish after 12+ hours)
        c_compiler: [clang]  # [clang, gcc]
        x86_simd_ext:
          - name: "SSE2"
            value: "OFF"
          - name: "AVX2"
            value: "ON"
        include:
          - c_compiler: clang
            cpp_compiler: clang++

    steps:
    - uses: actions/checkout@v4
      with:
        submodules: recursive

    - name: Set reusable strings
      id: strings
      shell: bash
      run: |
        echo "build-output-dir=${{ github.workspace }}/build" >> "$GITHUB_OUTPUT"

    - name: Install SDL3 Dependencies
      run: |
        sudo apt-get update
        sudo apt-get install build-essential git make pkg-config \
          cmake ninja-build gnome-desktop-testing \
          libasound2-dev libpulse-dev libaudio-dev \
          libjack-dev libsndio-dev libx11-dev \
          libxext-dev libxrandr-dev libxcursor-dev \
          libxfixes-dev libxi-dev libxss-dev \
          libxtst-dev libxkbcommon-dev libdrm-dev \
          libgbm-dev libgl1-mesa-dev libgles2-mesa-dev \
          libegl1-mesa-dev libdbus-1-dev libibus-1.0-dev \
          libudev-dev

    - name: Configure CMake
      run: >
        cmake -B ${{ steps.strings.outputs.build-output-dir }}
        -DCMAKE_CXX_COMPILER=${{ matrix.cpp_compiler }}
        -DCMAKE_C_COMPILER=${{ matrix.c_compiler }}
        -DCMAKE_BUILD_TYPE=${{ matrix.build_type }}
        -DBUILD_SHARED_LIBS=OFF
        -Dsatemu_AVX2=${{ matrix.x86_simd_ext.value }}
        -Dsatemu_ENABLE_IPO=ON
        -Dsatemu_ENABLE_DEVLOG=OFF
        -Dsatemu_ENABLE_IMGUI_DEMO=OFF
        -Dsatemu_ENABLE_SANDBOX=OFF
        -S ${{ github.workspace }}
        -G Ninja

    - name: Build
      run: cmake --build ${{ steps.strings.outputs.build-output-dir }} --config ${{ matrix.build_type }} --parallel

    ## FIXME: Catch2 integration still isn't working
    #- name: Test
    #  working-directory: ${{ steps.strings.outputs.build-output-dir }}
    #  run: ctest --build-config ${{ matrix.build_type }}

    - name: Package artifacts
      run: |
        tar cJvfh satemu-linux-${{ matrix.x86_simd_ext.name }}.tar.xz -C build/apps/satemu-sdl3 satemu-sdl3

    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: satemu-linux-${{ matrix.x86_simd_ext.name }}
        path: satemu-linux-${{ matrix.x86_simd_ext.name }}.tar.xz

  release:
    runs-on: ubuntu-latest
    if: github.ref_type == 'tag'
    needs: [build-windows, build-linux]

    permissions:
      contents: write

    steps:
    - name: Download artifacts
      id: download-artifacts-step
      uses: actions/download-artifact@v4
      with:
        path: satemu
        pattern: satemu-*
        merge-multiple: true

    - name: Release
      uses: softprops/action-gh-release@v2
      with:
        draft: true
        files: satemu/*
