name: Build binaries

on:
  push:
    branches: [ "main" ]
    tags: [ "v*" ]

jobs:
  build:
    name: ${{ matrix.os }}-${{ matrix.c_compiler }}-${{ matrix.x86_simd_ext.name }}-${{ matrix.devlog.name }}
    runs-on: ${{ matrix.os }}

    strategy:
      # Set fail-fast to false to ensure that feedback is delivered for all matrix combinations. Consider changing this to true when your workflow is stable.
      fail-fast: false

      matrix:
        os: [ubuntu-latest, windows-latest]
        build_type: [Release]
        c_compiler: [clang]  # NOTE: GCC gets stuck building sh2.cpp
        devlog:
          - name: "devlog"
            value: "ON"
          - name: "nodevlog"
            value: "OFF"
        x86_simd_ext:
          - name: "SSE2"
            value: "OFF"
          - name: "AVX2"
            value: "ON"
        include:
          - os: windows-latest
            c_compiler: clang
            cpp_compiler: clang
            exe_suffix: ".exe"
          - os: ubuntu-latest
            c_compiler: clang
            cpp_compiler: clang++
            exe_suffix: ""

    steps:
    - uses: actions/checkout@v4
      with:
        submodules: recursive

    - name: Set reusable strings
      id: strings
      shell: bash
      run: |
        echo "build-output-dir=${{ github.workspace }}/build" >> "$GITHUB_OUTPUT"

    - name: Install SDL3 Dependencies on Linux
      if: ${{ matrix.os == 'ubuntu-latest' }}
      run: >
        sudo apt-get install build-essential git make pkg-config \
          cmake ninja-build gnome-desktop-testing \
          libasound2-dev libpulse-dev libaudio-dev \
          libjack-dev libsndio-dev libx11-dev \
          libxext-dev libxrandr-dev libxcursor-dev \
          libxfixes-dev libxi-dev libxss-dev \
          libxtst-dev libxkbcommon-dev libdrm-dev \
          libgbm-dev libgl1-mesa-dev libgles2-mesa-dev \
          libegl1-mesa-dev libdbus-1-dev libibus-1.0-dev \
          libudev-dev

    - name: Configure MSVC
      if: ${{ matrix.os == 'windows-latest' && matrix.c_compiler == 'cl' }}
      uses: TheMrMilchmann/setup-msvc-dev@v3
      with:
        arch: x64

    - name: Configure CMake
      run: >
        cmake -B ${{ steps.strings.outputs.build-output-dir }}
        -DCMAKE_CXX_COMPILER=${{ matrix.cpp_compiler }}
        -DCMAKE_C_COMPILER=${{ matrix.c_compiler }}
        -DCMAKE_BUILD_TYPE=${{ matrix.build_type }}
        -DBUILD_SHARED_LIBS=OFF
        -Dsatemu_AVX2=${{ matrix.x86_simd_ext.value }}
        -Dsatemu_ENABLE_IPO=ON
        -Dsatemu_ENABLE_DEVLOG=${{ matrix.devlog.value }}
        -Dsatemu_ENABLE_IMGUI_DEMO=OFF
        -Dsatemu_ENABLE_SANDBOX=OFF
        -S ${{ github.workspace }}
        -G Ninja

    - name: Build
      run: cmake --build ${{ steps.strings.outputs.build-output-dir }} --config ${{ matrix.build_type }} --parallel

    - name: Test
      working-directory: ${{ steps.strings.outputs.build-output-dir }}
      run: ctest --build-config ${{ matrix.build_type }}

    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: satemu-sdl3-${{ matrix.avx2.name }}-${{ matrix.devlog.name }}
        path: build/apps/satemu-sdl3/satemu-sdl3${{ matrix.exe_suffix }}

  release:
    runs-on: ubuntu-latest
    if: github.ref_type == 'tag'

    steps:
    - name: Download artifacts
      uses: actions/download-artifact@v2
